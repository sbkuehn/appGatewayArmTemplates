{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vm1Name": {
      "type": "string",
      "minLength": 1
    },
    "adminUserName": {
      "type": "string",
      "minLength": 1
    },
    "adminPassword": {
      "type": "securestring"
    },
    "windowsOSVersion": {
      "type": "string",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ]
    },
    "vm2Name": {
      "type": "string",
      "minLength": 1
    },
    "vnetName": {
      "type": "string"
    },
    "appGtwyPipDomainName": {
      "type": "string",
      "defaultValue": "[concat('appgtwy-', uniqueString(resourceGroup().id))]"
    },
    "appGtwyName": {
      "type": "string"
    }
  },
  "variables": {
    "appGtwyPrefix": "172.19.0.0/16",
    "appGtwySubnet1Name": "appSub",
    "appGtwySubnet1Prefix": "172.19.0.0/24",
    "appGtwySubnet2Name": "appGtwySub",
    "appGtwySubnet2Prefix": "172.19.1.0/24",
    "diagStorAcctName": "[concat(uniquestring(resourceGroup().id), 'appgtwy')]",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "vmSize": "Standard_DS1_v2",
    "vm1IpAddress": "172.19.0.20",
    "vm2IpAddress": "172.19.0.21",
    "vNetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "subnet1Ref": "[concat(variables('vNetID'), '/subnets/', variables('appGtwySubnet1Name'))]",
    "subnet2Ref": "[concat(variables('vNetID'), '/subnets/', variables('appGtwySubnet2Name'))]",
    "appGtwySubName": "appGtwySub",
    "appGtwySubRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), variables('appGtwySubName'))]",
    "vm1NicName": "[concat(parameters('vm1Name'), '_Nic')]",
    "vm2NicName": "[concat(parameters('vm2Name'), '_Nic')]"
  },
  "resources": [
    {
      "name": "[parameters('vnetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "[parameters('vnetName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('appGtwyPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('appGtwySubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('appGtwySubnet1Prefix')]"
            }
          },
          {
            "name": "[variables('appGtwySub2Name')]",
            "properties": {
              "addressPrefix": "[variables('appGtwySub2Prefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2018-12-01",
      "name": "[parameters('appGtwyPipDomainName')]",
      "location": "East US",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "[parameters('appGtwyPipDomainName')]"
        },
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2018-12-01",
      "name": "[parameters('appGtwyName')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('appGtwyPipDomainName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vm1NicName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vm2NicName'))]"
      ],
      "properties": {
        "sku": {
          "name": "WAF_Medium",
          "tier": "WAF",
          "capacity": 1
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[variables('appGtwySubRef')]"
              }
            },
            "type": "Microsoft.Network/applicationGateways/gatewayIPConfigurations"
          }
        ],
        "sslCertificates": [],
        "authenticationCertificates": [],
        "frontendIPConfigurations": [
          {
            "name": "appGwPublicFrontendIp",
            "type": "Microsoft.Network/applicationGateways/frontendIPConfigurations",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('appGtwyPipDomainName'))]"
              }
            }
          },
          {
            "name": "appGwPrivateFrontendIp",
            "type": "Microsoft.Network/applicationGateways/frontendIPConfigurations",
            "properties": {
              "privateIPAddress": "172.19.1.10",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('appGtwySubRef')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "port_80",
            "properties": {
              "port": 80
            },
            "type": "Microsoft.Network/applicationGateways/frontendPorts"
          }
        ],
        "backendAddressPools": [
          {
            "name": "appGatewayBackend",
            "properties": {
              "backendIPConfigurations": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', variables('vm1NicName')), '/ipConfigurations/ipconfig1')]"
                },
                {
                  "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', variables('vm2NicName')), '/ipConfigurations/ipconfig1')]"
                }
              ],
              "backendAddresses": []
            },
            "type": "Microsoft.Network/applicationGateways/backendAddressPools"
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGatewaySetting",
            "properties": {
              "port": 80,
              "protocol": "Http",
              "cookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": false,
              "requestTimeout": 30
            },
            "type": "Microsoft.Network/applicationGateways/backendHttpSettingsCollection"
          }
        ],
        "httpListeners": [
          {
            "name": "appGatewayListener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGtwyName')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
              },
              "frontendPort": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGtwyName')), '/frontendPorts/port_80')]"
              },
              "protocol": "Http",
              "requireServerNameIndication": false
            },
            "type": "Microsoft.Network/applicationGateways/httpListeners"
          }
        ],
        "urlPathMaps": [],
        "requestRoutingRules": [
          {
            "name": "appGatewayRule",
            "properties": {
              "ruleType": "Basic",
              "httpListener": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGtwyName')), '/httpListeners/appGatewayListener')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGtwyName')), '/backendAddressPools/appGatewayBackend')]"
              },
              "backendHttpSettings": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGtwyName')), '/backendHttpSettingsCollection/appGatewaySetting')]"
              }
            },
            "type": "Microsoft.Network/applicationGateways/requestRoutingRules"
          }
        ],
        "probes": [],
        "rewriteRuleSets": [],
        "redirectConfigurations": [],
        "webApplicationFirewallConfiguration": {
          "enabled": true,
          "firewallMode": "Detection",
          "ruleSetType": "OWASP",
          "ruleSetVersion": "3.0",
          "disabledRuleGroups": [],
          "requestBodyCheck": true,
          "maxRequestBodySizeInKb": 128,
          "fileUploadLimitInMb": 100
        },
        "enableHttp2": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-07-01",
      "name": "[variables('diagStorAcctName')]",
      "location": "eastus",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "name": "[variables('vm1NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'appGateway')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "[variables('vm1IpAddress')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('vm1Name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('diagStorAcctName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vm1NicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vm1Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('vm1Name'), '_OsDisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "diskSizeGB": 127
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm1NicName'))]"
            }
          ]
        }
      }
    },
    {
      "name": "[variables('vm2NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "[variables('vm2IpAddress')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2018-10-01",
      "name": "[concat(parameters('vm1Name'), '/IIS')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vm1Name'))]"
      ],
      "properties": {
        "autoUpgradeMinorVersion": true,
        "settings": {
          "commandToExecute": "powershell Add-WindowsFeature Web-Server; powershell Add-Content -Path \"C:\\inetpub\\wwwroot\\Default.htm\" -Value $($env:computername)"
        },
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "protectedSettings": {}
      }
    },
    {
      "name": "[parameters('vm2Name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('diagStorAcctName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vm2NicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vm2Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('vm2Name'), '_OsDisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "diskSizeGB": 127
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm2NicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2018-10-01",
      "name": "[concat(parameters('vm2Name'), '/IIS')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vm2Name'))]"
      ],
      "properties": {
        "autoUpgradeMinorVersion": true,
        "settings": {
          "commandToExecute": "powershell Add-WindowsFeature Web-Server; powershell Add-Content -Path \"C:\\inetpub\\wwwroot\\Default.htm\" -Value $($env:computername)"
        },
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "protectedSettings": {}
      }
    }
  ],
  "outputs": {}
}
